# name: DubiousProject Github Actions
# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]
# jobs:
#   init:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [ 20.x ]
#     steps:
#       - uses: actions/checkout@v4
#       - name: Startion Node ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install modules
#         run: npm install --force
#       - name: build project
#         run: npm run build:prod
#       - name: typescript lint
#         run: npm run lint:eslint:ts
#         if: always()
#       - name: styles lint
#         run: npm run lint:scss
#         if: always()
#       - name: unit test
#         run: npm run test:unit
#         if: always()
#       - name: build storybook
#         run: npm run storybook:build
#         if: always()
#       - name: screenshot testing
#         run: npm run test:screenshots:ci
#         if: always()

name: DubiousProject Github Actions
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Startion Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci --force # ci for better perfomance (reuse package-lock)
      - name: build project
        run: npm run build:prod
        if: always()
      - name: build storybook
        run: npm run storybook:build
        if: always()
      - name: screenshot testing
        run: npm run test:screenshots:ci
        if: always()
      - name: generate screenshot HTML report
        run: npm run visual:report
        if: always()
      - name: Setup pages
        uses: actions/configure-pages@v4
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          path: '.loki'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v3

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci --force
      - name: eslint
        run: npm run lint:eslint:ts
        if: always()
      - name: typescript
        run: npm run lint:typescript:ts
        if: always()
      - name: styles lint
        run: npm run lint:scss
        if: always()
      - name: unit test
        run: npm run test:unit
        if: always()
